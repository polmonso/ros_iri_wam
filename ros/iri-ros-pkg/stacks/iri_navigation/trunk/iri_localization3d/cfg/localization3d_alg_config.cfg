#! /usr/bin/env python
#*  All rights reserved.
#*
#*  Redistribution and use in source and binary forms, with or without
#*  modification, are permitted provided that the following conditions
#*  are met:
#*
#*   * Redistributions of source code must retain the above copyright
#*     notice, this list of conditions and the following disclaimer.
#*   * Redistributions in binary form must reproduce the above
#*     copyright notice, this list of conditions and the following
#*     disclaimer in the documentation and/or other materials provided
#*     with the distribution.
#*   * Neither the name of the Willow Garage nor the names of its
#*     contributors may be used to endorse or promote products derived
#*     from this software without specific prior written permission.
#*
#*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#*  POSSIBILITY OF SUCH DAMAGE.
#***********************************************************

# Author: 

PACKAGE='iri_localization3d'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

#       Name                       Type       Reconfiguration level            Description                       Default   Min   Max
gen.add("num_particles",  int_t,  -1 , "NumberOfParticles",  50,      10,  10000)
gen.add("mapFile",  str_t,  -1 , "OBJ file with the 3D_model",  "")
gen.add("floorGridFile",  str_t,  -1 , "TXT file with the elevation grid",  "")
gen.add("initX",  double_t,  -1 , "intial X",  0,      -1000,  1000)
gen.add("initY",  double_t,  -1 , "intial Y",  0,      -1000,  1000)
gen.add("initH",  double_t,  -1 , "intial Heading",  0,      -3.1416,  3.1416)

gen.add("l1_frameName",  str_t,  -1 , "FrameName of laser1",  "")
gen.add("l1_typeId",  int_t,  -1 , "Type id of device laser 1", 0, 0, 7)
gen.add("l1_nRays",  int_t,  -1 , "Number of rays for laser 1", 0, 1, 1000)
gen.add("l1_aperture",  double_t,  -1 , "Scan aperture for laser 1 [rad]", 3.14, 0, 6.28)
gen.add("l1_rMin",  double_t,  -1 , "Minimum range for laser 1 [m]", 0.3, 0, 2)
gen.add("l1_rMax",  double_t,  -1 , "Maximum range for laser 1 [m]", 20, 0, 100)

gen.add("l2_frameName",  str_t,  -1 , "FrameName of laser 2",  "")
gen.add("l2_typeId",  int_t,  -1 , "Type id of device laser 2", 0, 0, 7)
gen.add("l2_nRays",  int_t,  -1 , "Number of rays for laser 2", 0, 1, 1000)
gen.add("l2_aperture",  double_t,  -1 , "Scan aperture for laser 2 [rad]", 3.14, 0, 6.28)
gen.add("l2_rMin",  double_t,  -1 , "Minimum range for laser 2 [m]", 0.3, 0, 2)
gen.add("l2_rMax",  double_t,  -1 , "Maximum range for laser 2 [m]", 20, 0, 100)

gen.add("l3_frameName",  str_t,  -1 , "FrameName of laser 3",  "")
gen.add("l3_typeId",  int_t,  -1 , "Type id of device laser 3", 0, 0, 7)
gen.add("l3_nRays",  int_t,  -1 , "Number of rays for laser 3", 0, 1, 1000)
gen.add("l3_aperture",  double_t,  -1 , "Scan aperture for laser 3 [rad]", 3.14, 0, 6.28)
gen.add("l3_rMin",  double_t,  -1 , "Minimum range for laser 3 [m]", 0.3, 0, 2)
gen.add("l3_rMax",  double_t,  -1 , "Maximum range for laser 3 [m]", 20, 0, 100)

exit(gen.generate(PACKAGE, "Localization3dAlgorithm", "Localization3d"))
