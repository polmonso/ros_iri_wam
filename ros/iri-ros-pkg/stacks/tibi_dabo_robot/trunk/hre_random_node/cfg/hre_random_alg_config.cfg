#! /usr/bin/env python
#*  All rights reserved.
#*
#*  Redistribution and use in source and binary forms, with or without
#*  modification, are permitted provided that the following conditions
#*  are met:
#*
#*   * Redistributions of source code must retain the above copyright
#*     notice, this list of conditions and the following disclaimer.
#*   * Redistributions in binary form must reproduce the above
#*     copyright notice, this list of conditions and the following
#*     disclaimer in the documentation and/or other materials provided
#*     with the distribution.
#*   * Neither the name of the Willow Garage nor the names of its
#*     contributors may be used to endorse or promote products derived
#*     from this software without specific prior written permission.
#*
#*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#*  POSSIBILITY OF SUCH DAMAGE.
#***********************************************************

# Author: 

PACKAGE='hre_random_node'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

enum_operation_mode = gen.enum([ 
gen.const("Random", int_t, 0, "Execute random sequences"),
gen.const("Sequence",  int_t, 1, "Execute a given sequence"),
], "Possible operation modes.")

#       Name                       Type       Reconfiguration level            Description                       Default   Min   Max
gen.add("op_mode",  int_t ,  0,                               "Desired operation mode",  0,      0,  1, edit_method=enum_operation_mode)
gen.add("seq_file", str_t ,  0,                               "Sequence file to execute" ,"")  
gen.add("home_interval", int_t ,  0,                               "Desired interval (in cicles) to execute the home sequence", 3, 2, 10)  
gen.add("speech_interval", int_t ,  0,                               "Desired interval (in cicles) to speak", 1, 1, 10)  
gen.add("repeat_interval", int_t ,  0,                               "Minimum interval (in cicles) between two identical motion sequences", 3, 1, 10)  

exit(gen.generate(PACKAGE, "HreRandomAlgorithm", "HreRandom"))
