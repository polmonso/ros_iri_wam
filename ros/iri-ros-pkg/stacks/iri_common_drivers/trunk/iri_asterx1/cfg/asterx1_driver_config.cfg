#! /usr/bin/env python
#*  All rights reserved.
#*
#*  Redistribution and use in source and binary forms, with or without
#*  modification, are permitted provided that the following conditions
#*  are met:
#*
#*   * Redistributions of source code must retain the above copyright
#*     notice, this list of conditions and the following disclaimer.
#*   * Redistributions in binary form must reproduce the above
#*     copyright notice, this list of conditions and the following
#*     disclaimer in the documentation and/or other materials provided
#*     with the distribution.
#*   * Neither the name of the Willow Garage nor the names of its
#*     contributors may be used to endorse or promote products derived
#*     from this software without specific prior written permission.
#*
#*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#*  POSSIBILITY OF SUCH DAMAGE.
#***********************************************************

# Author: 

PACKAGE='iri_asterx1'
import roslib; roslib.load_manifest(PACKAGE)

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

enum_rate = gen.enum([ 
gen.const("onChange", int_t, 0, "on change acquisition rate"),
gen.const("msec20",  int_t, 1, "20 msec acquisition rate"),
gen.const("msec50",  int_t, 2, "50 msec acquisition rate"),
gen.const("msec100",  int_t, 3, "100 msec acquisition rate"),
gen.const("msec200",  int_t, 4, "200 msec acquisition rate"),
gen.const("msec500",  int_t, 5, "500 msec acquisition rate"),
gen.const("sec1",  int_t, 6, "1 sec acquisition rate"),
gen.const("sec2",  int_t, 7, "2 sec acquisition rate"),
gen.const("sec5",  int_t, 8, "5 sec acquisition rate"),
gen.const("sec10",  int_t, 9, "10 sec acquisition rate"),
], "Allowed acquisition rates.")

#       Name                       Type       Reconfiguration level            Description                       Default   Min   Max
gen.add("serialPortName",       str_t,    SensorLevels.RECONFIGURE_CLOSE,   "The serial_port where the asterx1 device can be found", "/dev/ttyACM0")
gen.add("acquisitionRate",       int_t,    SensorLevels.RECONFIGURE_STOP,     "acquisition_rate ",               5,       0,    9, edit_method=enum_rate)

exit(gen.generate(PACKAGE, "Asterx1Driver", "Asterx1"))
